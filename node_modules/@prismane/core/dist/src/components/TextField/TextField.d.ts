import { FieldProps } from "../Field/Field";
export type TextFieldProps = {
    prefix?: string;
    suffix?: string;
} & FieldProps;
/**
    A component for rendering a text input field.
    @param {string} name - The name of the input field.
    @param {string} placeholder - The placeholder text to display in the input field.
    @param {string} label - The label to display above the input field.
    @param {ReactNode} icon - An optional icon to display inside the input field.
    @param {string} size - The size of the input field.
    @param {boolean} validating - A flag indicating whether the input field is currently being validated.
    @param {string} className - An optional CSS class to apply to the root element.
    @param {function} onFocus - An optional function to call when the input field receives focus.
    @param {function} onBlur - An optional function to call when the input field loses focus.
    @param {function} onChange - An optional function to call when the value of the input field changes.
    @param {string} value - The current value of the input field.
    @param {string} error - The error of the input field.
    @param {string} defaultValue - The default value of the input field.
    @param {boolean} readOnly - A flag indicating whether the input field is read-only.
    @returns {JSX.Element} A JSX element representing the TextField component.
    */
declare const TextField: import("react").ForwardRefExoticComponent<Omit<TextFieldProps, "ref"> & import("react").RefAttributes<HTMLInputElement | HTMLTextAreaElement>>;
export default TextField;
//# sourceMappingURL=TextField.d.ts.map